load("AllData.RData")
rm(A.Autoch,A.hexAutoch,A.hexMG1,A.hexMG2,A.MGp1,A.MGp2)
rm(Aautoch,autoch,B.Autoch,B.Gp1,B.Gp2,B.hexAll,B.hexAutoch,B.hexF)
rm(B.hexGp1,B.hexGp2,B.hexInv,B.hexInvU)
rm(B.Inv,B.InvU,B.VAll,B.Vfe)
rm(bombus,BOMBUS,Bombus_DS,Bombus_SP,bombus_ev_Hex)
rm(C.cocAutoch)
rm(PAu)
rm(SAutoch)
rm(Vautoch)
knitr::opts_chunk$set(echo = TRUE,fig.width=15,fig.height=8)
#apis max excitation
apis_ev<-read.table("SFZ Honey.txt", header = T)
#For COC models
apis_ev_Coc<- data.frame(-9.86*apis_ev$EUV+7.70*apis_ev$EBL+2.16*apis_ev$EGR,
-5.17*apis_ev$EUV+20.25*apis_ev$EBL-15.08*apis_ev$EGR)
apis_ev<-read.table("SFZ Honey.txt", header = T)
names(apis_ev) <- c("EUV","EBL","EGR")
#For hexagon models
apis_ev_Hex<- data.frame(0.8667*(apis_ev$EGR - apis_ev$EUV), (apis_ev$EBL) - 0.5*(apis_ev$EUV+apis_ev$EGR))
colnames(apis_ev_Hex)<- c("x", "y")
#For COC models
apis_ev_Coc<- data.frame(-9.86*apis_ev$EUV+7.70*apis_ev$EBL+2.16*apis_ev$EGR,
-5.17*apis_ev$EUV+20.25*apis_ev$EBL-15.08*apis_ev$EGR)
colnames(apis_ev_Coc)<- c("x", "y")
rm(apis_ev,Fe)
save.image(file = "AllData.RData")
rm(list=ls())
setwd("/Users/martin/Downloads/")
load("AllData.RData")
setwd("/Users/martin/Downloads/Github_DATA/0_Data")
rm(A.Autoch,A.hexMG1,A.hexMG2,A.MGp1,A.MGp2)
rm(Aautoch,autoch,B.Autoch,B.Gp1,B.Gp2,B.hexAll,B.hexAutoch,B.hexF)
rm(B.hexGp1,B.hexGp2,B.hexInv,B.hexInvU)
rm(B.Inv,B.InvU,B.VAll,B.Vfe)
rm(bombus,BOMBUS,Bombus_DS,Bombus_SP,bombus_ev_Hex)
rm(PAu)
rm(SAutoch)
rm(Vautoch)
apis_ev<-read.table("SFZ Honey.txt", header = T)
names(apis_ev) <- c("EUV","EBL","EGR")
#For hexagon models
apis_ev_Hex<- data.frame(0.8667*(apis_ev$EGR - apis_ev$EUV), (apis_ev$EBL) - 0.5*(apis_ev$EUV+apis_ev$EGR))
colnames(apis_ev_Hex)<- c("x", "y")
#For COC models
apis_ev_Coc<- data.frame(-9.86*apis_ev$EUV+7.70*apis_ev$EBL+2.16*apis_ev$EGR,
-5.17*apis_ev$EUV+20.25*apis_ev$EBL-15.08*apis_ev$EGR)
colnames(apis_ev_Coc)<- c("x", "y")
rm(apis_ev,Fe)
save.image(file = "AllData.RData")
#FIG 3A PCA ###----
colo1<-"#E3AD3B"
colo2<-"#7A5E79"
colo2F<-"#D0A952"
colo3<-"#C00000"
str(PR)
a<-seq(0, 0, length.out = 73)
b<-tibble(a)
knitr::opts_chunk$set(echo = TRUE,fig.width=15,fig.height=8)
library(dplyr)
library(factoextra)
library(NbClust)
library(ggbiplot)
rm(list=ls())
set.seed(666) #Fixe noyau aléatoire
setwd("/Users/martin/Downloads/Github_DATA/0_Data")
load("AllData.RData")
df<-A.hexAll[4:5]
get_clust_tendency(df,2)
PR <- prcomp(df, scale. = TRUE)
k1 <- kmeans(df, 2, nstart=25, iter.max=1000)
Newcat<-k1$cluster
colo2<-"#E3AD3B"
colo1<-"#7A5E79"
ggbiplot(PR,obs.scale=1,var.scale=1,groups=as.factor(Newcat),
ellipse=TRUE)+
theme(axis.title=element_text(size=20))+
theme_classic()+
scale_color_manual(values=c(colo2,colo1))+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = "F")
a<-seq(0, 0, length.out = 73)
b<-tibble(a)
b$a<-as.character(b$a)
b<-b %>% mutate(a="")
b[1,1]<-"IG_P"
b[11,1]<-"RJ"
b[22,1]<-"SJ"
b[52,1]<-"IG_W"
b[8,1]<-"BD"
b[45,1]<-"IG_V"
ggbiplot(PR,obs.scale=1,var.scale=1,groups=as.factor(Newcat),
ellipse=TRUE,size=8)+
geom_point(aes(colour=as.factor(Newcat)), size = 3) +
theme(axis.title=element_text(size=50))+
theme_classic()+
scale_color_manual(values=c(colo1,colo3))+
theme(axis.text=element_text(size=30,color="black"),
axis.title=element_text(size=30),
legend.title = element_text(size=30),
legend.text = element_text(size=30),
legend.key.height= unit(2, 'cm'),
legend.key.width= unit(2, 'cm'))+
labs(color = "Invasives")+
theme(axis.ticks.length=unit(0.5, "cm"))+
theme(axis.line=element_line(size=1.2))+
theme(axis.ticks = element_line(colour = "black", size = 1.2))+
theme(legend.direction = 'horizontal', legend.position = 'top')
#FIG 3A PCA ###----
colo1<-"#E3AD3B"
colo2<-"#7A5E79"
colo2F<-"#D0A952"
colo3<-"#C00000"
str(PR)
a<-seq(0, 0, length.out = 73)
b<-tibble(a)
b$a<-as.character(b$a)
b<-b %>% mutate(a="")
b[1,1]<-"IG_P"
b[11,1]<-"RJ"
b[22,1]<-"SJ"
b[52,1]<-"IG_W"
b[8,1]<-"BD"
b[45,1]<-"IG_V"
ggbiplot(PR,obs.scale=1,var.scale=1,groups=as.factor(Newcat),
ellipse=TRUE,size=8)+
geom_point(aes(colour=as.factor(Newcat)), size = 3) +
theme(axis.title=element_text(size=50))+
theme_classic()+
scale_color_manual(values=c(colo1,colo3))+
theme(axis.text=element_text(size=30,color="black"),
axis.title=element_text(size=30),
legend.title = element_text(size=30),
legend.text = element_text(size=30),
legend.key.height= unit(2, 'cm'),
legend.key.width= unit(2, 'cm'))+
labs(color = "Invasives")+
theme(axis.ticks.length=unit(0.5, "cm"))+
theme(axis.line=element_line(size=1.2))+
theme(axis.ticks = element_line(colour = "black", size = 1.2))+
theme(legend.direction = 'horizontal', legend.position = 'top')
#png(width=800, height=700,filename = "PCA.jpeg")
ggbiplot(PR,obs.scale=1,var.scale=1,groups=as.factor(Newcat),
ellipse=TRUE,labels = b$a,labels.size = 10)+
geom_point(aes(colour=as.factor(Newcat)), size = 3) +
theme(axis.title=element_text(size=20))+
theme_classic()+
scale_color_manual(values=c(colo1,colo2))+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.title = element_text(size=20),
legend.text = element_text(size=20))+
theme(legend.direction = 'horizontal', legend.position = 'top')
PR <- prcomp(df, scale. = TRUE)
k1 <- kmeans(df, 2, nstart=25, iter.max=1000)
Newcat<-k1$cluster
colo2<-"#E3AD3B"
colo1<-"#7A5E79"
ggbiplot(PR,obs.scale=1,var.scale=1,groups=as.factor(Newcat),
ellipse=TRUE)+
theme(axis.title=element_text(size=20))+
theme_classic()+
scale_color_manual(values=c(colo2,colo1))+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.position = "F")
a<-seq(0, 0, length.out = 73)
b<-tibble(a)
b$a<-as.character(b$a)
b<-b %>% mutate(a="")
b[1,1]<-"IG_P"
b[11,1]<-"RJ"
b[22,1]<-"SJ"
b[52,1]<-"IG_W"
b[8,1]<-"BD"
b[45,1]<-"IG_V"
ggbiplot(PR,obs.scale=1,var.scale=1,groups=as.factor(Newcat),
ellipse=TRUE,labels = b$a,labels.size = 10)+
geom_point(aes(colour=as.factor(Newcat)), size = 3) +
theme(axis.title=element_text(size=20))+
theme_classic()+
scale_color_manual(values=c(colo1,colo2))+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.title = element_text(size=20),
legend.text = element_text(size=20))+
legend.position = "F")
ggbiplot(PR,obs.scale=1,var.scale=1,groups=as.factor(Newcat),
ellipse=TRUE,labels = b$a,labels.size = 10)+
geom_point(aes(colour=as.factor(Newcat)), size = 3) +
theme(axis.title=element_text(size=20))+
theme_classic()+
scale_color_manual(values=c(colo1,colo2))+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.title = element_text(size=20),
legend.text = element_text(size=20)+
legend.position = "F")
ggbiplot(PR,obs.scale=1,var.scale=1,groups=as.factor(Newcat),
ellipse=TRUE,labels = b$a,labels.size = 10)+
geom_point(aes(colour=as.factor(Newcat)), size = 3) +
theme(axis.title=element_text(size=20))+
theme_classic()+
scale_color_manual(values=c(colo1,colo2))+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=20),
legend.title = element_text(size=20),
legend.text = element_text(size=20),
legend.position = "F")
library(zoom)
library(pavo)
library(ggplot2)
library(dplyr)
library(stringr)
library(gtools)
library(pdist)
library(lme4)
library(lattice)
library(car)
library(ggpubr)
library(vegan)
library(devtools)
library(pairwiseAdonis)
library(RVAideMemoire)
library(tidyr)
rm(list=ls())
set.seed(666) #Fixe noyau aléatoire
setwd("/Users/martin/Downloads/Github_DATA/1_Prepare_data")
library(zoom)
library(pavo)
library(ggplot2)
library(dplyr)
library(stringr)
library(gtools)
library(pdist)
library(lme4)
library(lattice)
library(car)
library(ggpubr)
library(vegan)
library(devtools)
library(pairwiseAdonis)
library(RVAideMemoire)
library(tidyr)
rm(list=ls())
set.seed(666) #Fixe noyau aléatoire
setwd("/Users/martin/Downloads/Github_DATA/0_Data")
load("AllData.RData")
cc<-"#842C1F"
ci<-"#BE773C"
ce<-"#E6BF6D"
cn<-"#375621"
gf3a<- gf2 %>% filter(zone=="core") %>% mutate(z2="Core")
#OPEN ----
rm(list=ls())
setwd("/Users/martin/Downloads/")
load("AllData.RData")
#remove ----
rm(A.Autoch,A.hexMG1,A.hexMG2,A.MGp1,A.MGp2)
rm(Aautoch,autoch,B.Autoch,B.Gp1,B.Gp2,B.hexAll,B.hexAutoch,B.hexF)
rm(B.hexGp1,B.hexGp2,B.hexInv,B.hexInvU)
rm(B.Inv,B.InvU,B.VAll,B.Vfe)
rm(bombus,BOMBUS,Bombus_DS,Bombus_SP,bombus_ev_Hex)
rm(PAu)
rm(SAutoch)
rm(Vautoch)
#create ev coc model
apis_ev<-read.table("SFZ Honey.txt", header = T)
names(apis_ev) <- c("EUV","EBL","EGR")
#For hexagon models
apis_ev_Hex<- data.frame(0.8667*(apis_ev$EGR - apis_ev$EUV), (apis_ev$EBL) - 0.5*(apis_ev$EUV+apis_ev$EGR))
colnames(apis_ev_Hex)<- c("x", "y")
#For COC models
apis_ev_Coc<- data.frame(-9.86*apis_ev$EUV+7.70*apis_ev$EBL+2.16*apis_ev$EGR,
-5.17*apis_ev$EUV+20.25*apis_ev$EBL-15.08*apis_ev$EGR)
colnames(apis_ev_Coc)<- c("x", "y")
#create ev coc model
apis_ev<-read.table("SFZ Honey.txt", header = T)
#create ev coc model
setwd("/Users/martin/Downloads/Github_DATA/0_Data")
apis_ev<-read.table("SFZ Honey.txt", header = T)
names(apis_ev) <- c("EUV","EBL","EGR")
#For hexagon models
apis_ev_Hex<- data.frame(0.8667*(apis_ev$EGR - apis_ev$EUV), (apis_ev$EBL) - 0.5*(apis_ev$EUV+apis_ev$EGR))
colnames(apis_ev_Hex)<- c("x", "y")
#For COC models
apis_ev_Coc<- data.frame(-9.86*apis_ev$EUV+7.70*apis_ev$EBL+2.16*apis_ev$EGR,
-5.17*apis_ev$EUV+20.25*apis_ev$EBL-15.08*apis_ev$EGR)
colnames(apis_ev_Coc)<- c("x", "y")
rm(apis_ev,Fe)
setwd("/Users/martin/Downloads/Github_DATA/0_Data")
geo<-read.table("abundancy_measurements.csv",sep=",",header=T)
g2<-geo %>% gather(key="zone",value=abundance,core:neighborhood)
resume_contrasts<-read.table("resume_contrasts.csv",sep="",header=T)
g3<-left_join(resume_contrasts,g2,by=c("species"="species"))
gf1<-g3 %>% filter(patch!=~is.na(.)) %>% filter(abundance!=0)
gf1$zone<-factor(gf1$zone,levels=(c("core","internal",
"external","neighborhood")))
gf1$cat<-factor(gf1$cat,levels=(c("inv","gp1",
"gp2")))
gf2<-gf1 %>% mutate(cat=str_replace(cat,"inv","Invasives")) %>%
mutate(cat=str_replace(cat,"gp1","Group 1")) %>%
mutate(cat=str_replace(cat,"gp2","Group 2"))
gf2$cat<-factor(gf2$cat,levels=(c("Invasives","Group 1",
"Group 2")))
gf2$patch<-as.factor(gf2$patch)
ginv<-gf2 %>% filter(cat=="Invasives") %>%
group_by(species,zone) %>%
dplyr::summarise(abundance=mean(abundance)) %>% ungroup()
#SAVE ----
setwd("/Users/martin/Downloads/Github_DATA/0_Data")
save.image(file = "AllData.RData")
library(zoom)
library(pavo)
library(ggplot2)
library(dplyr)
library(stringr)
library(gtools)
library(pdist)
library(lme4)
library(lattice)
library(car)
library(ggpubr)
library(vegan)
library(devtools)
library(pairwiseAdonis)
library(RVAideMemoire)
library(tidyr)
rm(list=ls())
set.seed(666) #Fixe noyau aléatoire
setwd("/Users/martin/Downloads/Github_DATA/0_Data")
load("AllData.RData")
cc<-"#842C1F"
ci<-"#BE773C"
ce<-"#E6BF6D"
cn<-"#375621"
gf3a<- gf2 %>% filter(zone=="core") %>% mutate(z2="Core")
gf3b<- gf2 %>% filter(zone=="internal") %>% mutate(z2="Inner Edge")
gf3c<- gf2 %>% filter(zone=="external") %>% mutate(z2="Outer Edge")
gf3d<- gf2 %>% filter(zone=="neighborhood") %>% mutate(z2="Surrounding")
gf3<-bind_rows(gf3a,gf3b,gf3c,gf3d)
ggplot(gf3,aes(x=cat, y=abundance,color=z2,fill=z2))+
geom_col(position = position_dodge(width = 0.94))+
labs(y="Relative abundance (%)",x="")+
scale_color_manual(values=c(cc,ci,ce,cn))+
scale_fill_manual(values=c(cc,ci,ce,cn))+
theme_classic()+
labs(fill="Zone")+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(size=22,face = "bold"))+
theme(axis.text=element_text(size=30))+
theme(plot.margin = margin(1,1,1,1, "cm"))+
theme(axis.title=element_text(size=30))+
theme(legend.title = element_text(size=30),
legend.text = element_text(size=30),
strip.text = element_text(size = 30))+
theme(legend.position="none")+
theme(axis.ticks.length=unit(0.5, "cm"))+
theme(axis.line=element_line(size=1.2))+
theme(axis.ticks = element_line(colour = "black", size = 1.2))
Ap2<-APIS%>%
filter(cat!="autoch"&cat!="OR"&cat!="EK"&cat!="SI"&cat!="OE"&cat!="SNI")
Ap2G<-Ap2%>%
filter(cat=="inv"|cat=="gp1"|cat=="gp2")
AI<-Ap2%>%
filter(cat!="inv"&cat!="gp1"&cat!="gp2")
ApG<-APIS %>% filter(cat=="inv"|cat=="gp1"|cat=="gp2")
ApG <- ApG %>%
mutate(cat = str_replace(cat, "inv", "Invasives")) %>%
mutate(cat = str_replace(cat, "gp1", "Group 1")) %>%
mutate(cat = str_replace(cat, "gp2", "Group 2"))
colo1<-"#E3AD3B"
colo2<-"#7A5E79"
colo2F<-"#D0A952"
colo3<-"#C00000"
ggplot(ApG,aes(y=dS,x=cat,color=cat))+
geom_boxplot(size=1.5)+
geom_point(size=1.5)+
stat_summary(fun = "mean", geom = "point",size=3,color="black",shape=15)+
theme_classic()+
labs(y="Chromatic contrast (HU)",x="")+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(size=22,face = "bold"))+
theme(axis.text=element_text(size=30),
axis.title=element_text(size=30))+
scale_color_manual(values=c(colo2,colo1,colo3))+ #GLY2
theme(legend.title = element_text(size=30),
legend.text = element_text(size=30))+
theme(legend.position = "none",
strip.text = element_text(size = 30))+
stat_compare_means(comparisons = list(c("Group 2","Invasives"),c("Group 1","Invasives")),
method.args = list(alternative = "greater"),
aes(label = ..p.signif..),
bracket.size = 1,size=5)
ggplot(ApG,aes(y=dL,x=cat,color=cat))+
geom_boxplot(size=1.5)+
geom_point(size=1.5)+
stat_summary(fun = "mean", geom = "point",size=3,color="black",shape=15)+
theme_classic()+
labs(y="Achromatic contrast",x="")+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(size=22,face = "bold"))+
theme(axis.text=element_text(size=30),
axis.title=element_text(size=30))+
scale_color_manual(values=c(colo2,colo1,colo3))+ #GLY2
theme(legend.title = element_text(size=30),
legend.text = element_text(size=30))+
theme(legend.position = "none",
strip.text = element_text(size = 30))+
stat_compare_means(comparisons = list(c("Group 2","Invasives"),c("Group 1","Invasives")),
method.args = list(alternative = "greater"),
aes(label = ..p.signif..),
bracket.size = 1,size=5)
ggplot(ApG,aes(y=purity,x=cat,color=cat))+
geom_boxplot(size=1.5)+
geom_point(size=1.5)+
stat_summary(fun = "mean", geom = "point",size=3,color="black",shape=15)+
theme_classic()+
labs(y="Spectral purity (HU)",x="")+
theme(plot.title = element_text(hjust = 0.5))+
theme(plot.title = element_text(size=22,face = "bold"))+
theme(axis.text=element_text(size=30),
axis.title=element_text(size=30))+
scale_color_manual(values=c(colo2,colo1,colo3))+ #GLY2
theme(legend.title = element_text(size=30),
legend.text = element_text(size=30))+
theme(legend.position = "none",
strip.text = element_text(size = 30))+
stat_compare_means(comparisons = list(c("Group 2","Invasives"),c("Group 1","Invasives")),
method.args = list(alternative = "greater"),
aes(label = ..p.signif..),
bracket.size = 1,size=5)
knitr::opts_chunk$set(echo = TRUE,fig.width=15,fig.height=8)
library(zoom)
library(pavo)
library(ggplot2)
library(dplyr)
library(stringr)
library(gtools)
library(pdist)
library(lme4)
library(lattice)
library(car)
library(ggpubr)
library(vegan)
library(devtools)
library(pairwiseAdonis)
library(RVAideMemoire)
rm(list=ls())
set.seed(666) #Fixe noyau aléatoire
setwd("/Users/martin/Downloads/Github_DATA/0_data")
load("AllData.RData")
SIn<-SInv%>%
setNames(paste0('I', names(.)))
Sg1<-S1%>%
setNames(paste0('y', names(.)))
Sg2<-S2%>%
setNames(paste0('z', names(.)))
SIR<-SInv%>%
select(Impatiens_glandulifera_P)%>%
setNames(paste0('U', names(.)))
SIW<-SInv%>%
select(Impatiens_glandulifera_W)%>%
setNames(paste0('W', names(.)))
SIV<-SInv%>%
select(Impatiens_glandulifera_V)%>%
setNames(paste0('V', names(.)))
SIA<-SInv%>%
select(Buddleja_davidii,Reynoutria_japonica,Spiraea_japonica)
colo1<-"#E3AD3B"
colo2<-"#7A5E79"
colo3<-"#C00000"
N2<-bind_cols(Sg1,Sg2,SIn)
N2<-N2
N2<-as.rspec(N2)
V2<-vismodel(N2, qcatch = "Ei", relative = FALSE, vonkries = TRUE, achromatic = "l", visual = apis, bkg = Fmean$dat, illum="D65")
AV2 <- colspace(V2, space="hexagon")
D2<-coldist(AV2,achromatic = TRUE)
matS2 <- dist(coldist2mat(D2)[['dS']])
group2 <- substring(rownames(as.matrix(matS2)), 1, 1)
#bootstrap
boot2 <- bootcoldist(AV2, by=group2)
es1<-as_tibble(boot2) %>% mutate(yo=c("G1-Invasives" ,"G1-G2", "G2-Invasives"))
#1000 * 700
ggplot(es1,aes(x=yo,y=dS.mean))+
geom_hline(yintercept=0.1, linetype="dashed",size=2)+
geom_pointrange(aes(ymin=dS.lwr,ymax=dS.upr,color=as.factor(yo)),size=2,linewidth=2)+
theme_classic()+
labs(y="Chromatic contrast (HU)",x="Centroid comparison")+
theme(axis.title=element_text(size=50))+
theme_minimal()+
scale_color_manual(values=c(colo3,colo2,colo1))+
theme(axis.text=element_text(size=30,color="black"),
axis.title=element_text(size=30),
legend.title = element_text(size=30),
legend.text = element_text(size=30),
legend.key.height= unit(2, 'cm'),
legend.key.width= unit(2, 'cm'))+
theme(axis.ticks.length=unit(0.5, "cm"))+
theme(axis.line=element_line(size=1.2))+
theme(axis.ticks = element_line(colour = "black", size = 1.2))+
theme(legend.position="none")
bdispS <- betadisper(matS2, group2, type='centroid') #Verify intra-homogeneity
anova(bdispS) #OK No intra-difference
#TukeyHSD(bdispS)
pmanovaS <- adonis(matS2~group)
pmanovaS <- adonis(matS2~group2)
pmanovaS
pmanovaS <- adonis(matS2~group2)
pmanovaS <- adonis(matS2~group2)
pmanovaS
